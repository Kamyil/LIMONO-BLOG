.brand-img {
  width: 200px;
  position: relative;
  bottom: 13px; }

.links {
  padding: 25px; }

.navbar {
  min-height: 100px !important;
  background-color: #fff !important;
  border: none !important; }
  .navbar .navbar-collapse {
    border-top: none !important; }
  @media (max-width: 750px) {
    .navbar .links {
      margin-top: 30px; } }
  .navbar .navbar-toggle {
    border: none;
    position: relative;
    top: 25px;
    right: 10px; }
    .navbar .navbar-toggle .icon-bar {
      background-color: black !important; }

article .jumbotron {
  background-color: #fff;
  padding: 10px; }
  article .jumbotron .article-image {
    background-image: url("../img/limono-post-image.png");
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-size: cover;
    width: 100%;
    height: 500px; }

article .article-comment-textarea {
  width: 100%;
  min-height: 150px;
  resize: none;
  margin: 15px; }

.post-category-header {
  margin-left: 59px; }

.popular-posts {
  margin-top: 10px; }
  .popular-posts-header {
    margin-left: 18px; }

.post .thumbnail img {
  width: 730px; }

.sidebar .new-things {
  list-style: none !important; }
  .sidebar .new-things li {
    position: relative;
    right: 38px; }
    .sidebar .new-things li a {
      color: #797878;
      text-decoration: none; }

.thumbnail {
  border: none !important; }

body {
  font-family: 'Poppins', sans-serif !important; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvbmF2YmFyL19uYXZiYXIuc2NzcyIsImNvbXBvbmVudHMvbmF2YmFyL19uYXZiYXItYnNvdmVyd3JpdGUuc2NzcyIsIm1peGlucy9tZWRpYVF1ZXJpZXMuc2NzcyIsImNvbXBvbmVudHMvcG9zdC9fcG9zdC5zY3NzIiwibWl4aW5zL19mdWxsV2lkdGhJbWdCZy5zY3NzIiwibWl4aW5zL19yZWN0YW5nbGUuc2NzcyIsImNvbXBvbmVudHMvcG9zdC9fcG9zdC1ic292ZXJ3cml0ZS5zY3NzIiwiY29tcG9uZW50cy9zaWRlYmFyL19zaWRlYmFyLnNjc3MiLCJfdmFyaWFibGVzLnNjc3MiLCJfYnMtb3ZlcndyaXRlLnNjc3MiLCJtYWluLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLGFBQWEsRUFDaEI7O0FBQ0Q7RUFDSSxjQUFjLEVBQ2pCOztBQ0xEO0VBRUksNkJBQTZCO0VBQzdCLGtDQUFrQztFQUNsQyx3QkFBd0IsRUFtQjNCO0VBdkJEO0lBTVEsNEJBQTRCLEVBQy9CO0VDTkg7SURERjtNQVVRLGlCQUFpQixFQUVwQixFQUFBO0VBWkw7SUFjUSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLFVBQVU7SUFDVixZQUFZLEVBSWY7SUFyQkw7TUFtQlksbUNBQW1DLEVBQ3RDOztBRW5CVDtFQUdRLHVCQUF1QjtFQUN2QixjQUFjLEVBS2pCO0VBVEw7SUNGSSxzREFBcUI7SUFDckIsNEJBQTRCO0lBQzVCLDZCQUE2QjtJQUM3Qiw2QkFBNkI7SUFDN0IsdUJBQXVCO0lDSHZCLFlGUStCO0lFUC9CLGNGT3NDLEVBQ2pDOztBQVJUO0VBY1ksWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsYUFBYSxFQUNoQjs7QUFHVDtFQUdJLGtCQUFrQixFQUNqQjs7QUFJTDtFQUNJLGlCQUFpQixFQUlwQjtFQUxEO0lBR1Esa0JBQWtCLEVBQ3JCOztBR25DTDtFQUdZLGFBQWEsRUFDaEI7O0FDTFQ7RUFFUSw0QkFBNEIsRUFTL0I7RUFYTDtJQUlZLG1CQUFtQjtJQUNuQixZQUFZLEVBS2Y7SUFWVDtNQU9ZLGVDSU87TURIUCxzQkFBc0IsRUFDdEI7O0FFVFo7RUFDSSx3QkFBd0IsRUFDM0I7O0FDVUQ7RUFFSSw4Q0FBOEMsRUFLakQiLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnJhbmQtaW1ne1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYm90dG9tOiAxM3B4O1xufVxuLmxpbmtze1xuICAgIHBhZGRpbmc6IDI1cHg7XG59IiwiQGltcG9ydCAnbWl4aW5zL21lZGlhUXVlcmllcyc7XG5cbi5uYXZiYXJ7XG4gICAgXG4gICAgbWluLWhlaWdodDogMTAwcHggIWltcG9ydGFudDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XG4gICAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XG4gICAgLm5hdmJhci1jb2xsYXBzZXtcbiAgICAgICAgYm9yZGVyLXRvcDogbm9uZSAhaW1wb3J0YW50O1xuICAgIH1cbiAgICAubGlua3N7XG4gICAgICAgIEBpbmNsdWRlIG9uU21hbGx7XG4gICAgICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLm5hdmJhci10b2dnbGV7XG4gICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB0b3A6IDI1cHg7XG4gICAgICAgIHJpZ2h0OiAxMHB4O1xuICAgICAgICAuaWNvbi1iYXJ7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjayAhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgfVxuXG59IiwiQGltcG9ydCBcIi4uL3ZhcmlhYmxlc1wiO1xuXG5AbWl4aW4gb25TbWFsbHtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICN7JEJQc21hbGx9KXtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gb25TbWFsbEhvcml6b250YWx7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAjeyRCUHNtYWxsfSkgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKXtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gb25NZWRpdW17XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAjeyRCUG1lZGl1bX0pe1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBvbkxhcmdle1xuICBAbWVkaWEgKG1heC13aWR0aDogI3skYnBMYXJnZX0pe1xuICAgIEBjb250ZW50O1xuICB9XG59XG5AbWl4aW4gZnJvbVNtYWxse1xuICBAbWVkaWEgKG1pbi13aWR0aDogI3skQlBzbWFsbH0pe1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBmcm9tTWVkaXVte1xuICBAbWVkaWEgKG1pbi13aWR0aDogI3skQlBtZWRpdW19KXtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gZnJvbUxhcmdle1xuICBAbWVkaWEgKG1pbi13aWR0aDogI3skYnBMYXJnZX0pe1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBvbmx5RXh0cmFTbWFsbHtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICN7JEJQc21hbGx9KXtcbiAgICBAY29udGVudDtcbiAgfVxufVxuQG1peGluIG9ubHlTbWFsbHtcbiAgQG1lZGlhIChtaW4td2lkdGg6ICN7JEJQc21hbGx9KSAgYW5kIChtYXgtd2lkdGg6ICN7JEJQbWVkaXVtfSl7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cbkBtaXhpbiBvbmx5TWVkaXVte1xuICBAbWVkaWEgKG1pbi13aWR0aDogI3skQlBtZWRpdW19KSAgYW5kIChtaW4td2lkdGg6ICN7JGJwTGFyZ2V9KXtcbiAgICBAY29udGVudDtcbiAgfVxufVxuQG1peGluIG9ubHlMYXJnZXtcbiAgQG1lZGlhIChtaW4td2lkdGg6ICN7JGJwTGFyZ2V9KXtcbiAgICBAY29udGVudDtcbiAgfVxufSIsIkBpbXBvcnQgJ21peGlucy9yZWN0YW5nbGUnO1xuQGltcG9ydCAnbWl4aW5zL2Z1bGxXaWR0aEltZ0JnJztcblxuYXJ0aWNsZXtcblxuICAgIC5qdW1ib3Ryb257XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICAgIC5hcnRpY2xlLWltYWdle1xuICAgICAgICAgICAgQGluY2x1ZGUgZnVsbFdpZHRoSW1nQmcoJy4uL2ltZy9saW1vbm8tcG9zdC1pbWFnZS5wbmcnKTtcbiAgICAgICAgICAgIEBpbmNsdWRlIHJlY3RhbmdsZSgxMDAlLCA1MDBweCk7XG4gICAgICAgIH1cbiAgICB9ICAgXG5cbiAgICAuYXJ0aWNsZXtcblxuICAgICAgICAmLWNvbW1lbnQtdGV4dGFyZWF7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDE1MHB4O1xuICAgICAgICAgICAgcmVzaXplOiBub25lO1xuICAgICAgICAgICAgbWFyZ2luOiAxNXB4O1xuICAgICAgICB9XG4gICAgfSBcbn1cbi5wb3N0e1xuICAgIFxuICAgICYtY2F0ZWdvcnktaGVhZGVye1xuICAgIG1hcmdpbi1sZWZ0OiA1OXB4OyAgICAgICBcbiAgICB9XG5cbiAgICBcbn1cbi5wb3B1bGFyLXBvc3Rze1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgJi1oZWFkZXJ7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxOHB4O1xuICAgIH1cbn0iLCJAbWl4aW4gZnVsbFdpZHRoSW1nQmcoJHBhdGgpe1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgkcGF0aCk7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuXG5cbn0iLCJAbWl4aW4gcmVjdGFuZ2xlKCR3aWR0aCwkaGVpZ2h0KXtcblxuICAgIHdpZHRoOiAkd2lkdGg7XG4gICAgaGVpZ2h0OiAkaGVpZ2h0O1xuXG59IiwiXG4ucG9zdHtcbiAgICAudGh1bWJuYWlse1xuICAgICAgICBpbWd7XG4gICAgICAgICAgICB3aWR0aDogNzMwcHg7XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCIuc2lkZWJhcntcbiAgICAubmV3LXRoaW5nc3tcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZSAhaW1wb3J0YW50O1xuICAgICAgICBsaXtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIHJpZ2h0OiAzOHB4O1xuICAgICAgICAgICBhe1xuICAgICAgICAgICAgY29sb3I6ICRsaW1vLWdyYXk7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0iLCIvLyBCcmVha3BvaW50c1xuXG4kYnBMYXJnZTogMTE3MHB4OyAvLzEyMDBweFxuJEJQbWVkaXVtOiA5NzBweDsgLy85OTJweFxuJEJQc21hbGw6IDc1MHB4O1xuJEJQZXh0cmFTbWFsbDogYXV0bzsgIC8vNzY4cHhcblxuLy8gQ29sb3JzXG5cbiRsaW1vLWJsYWNrOiBibGFjaztcbiRsaW1vLWRhcmstZ3JheTogIzBiMGIwYjtcbiRsaW1vLWdyYXk6ICM3OTc4Nzg7XG4kbGltby1ncmF5MjogIzgyODE4MTtcbiRsaW1vLWxpZ2h0LWdyYXk6ICNlY2VjZWM7XG4kbGltby1saWdodC1ncmF5MjogI2RhZGFkYTtcbiRsaW1vLXR4dDogIzExMTExMTtcbiRsaW1vLXR4dC13aGl0ZTogd2hpdGU7XG4kbGltby10eHQtaGw6ICNkYjMzNjE7XG4kbGltby1za3libHVlMTogI2RhZjhmODtcbiRsaW1vLXNreWJsdWUyOiAjYjZmMmYyO1xuJGxpbW8tc2t5Ymx1ZTM6ICNmMWZjZmM7XG4kbGltby1za3libHVlLWRhcms6ICM2Y2E1YTU7XG4kbGltby11bmFjdGl2ZTogI2IyYjJiMjtcblxuLy8gRm9udCBzaXplc1xuXG4kZm9udC14czogMTFweDtcbiRmb250LXNtOiAxMnB4O1xuJGZvbnQtbWQ6IDE2cHg7XG4kZm9udC1sZzogMjBweDtcbiRmb250LWhlYWRlcjogNDBweDsiLCIudGh1bWJuYWlse1xuICAgIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xufSIsIkBpbXBvcnQgXCJjb21wb25lbnRzL25hdmJhci9uYXZiYXJcIjtcbkBpbXBvcnQgXCJjb21wb25lbnRzL25hdmJhci9uYXZiYXItYnNvdmVyd3JpdGVcIjtcbkBpbXBvcnQgXCJjb21wb25lbnRzL3Bvc3QvcG9zdFwiO1xuQGltcG9ydCBcImNvbXBvbmVudHMvcG9zdC9wb3N0LWJzb3ZlcndyaXRlXCI7XG5AaW1wb3J0IFwiY29tcG9uZW50cy9zaWRlYmFyL3NpZGViYXJcIjtcbkBpbXBvcnQgXCJicy1vdmVyd3JpdGVcIjtcblxuLy8gTWl4aW5zIC8gRnVuY3Rpb25zXG5cblxuXG5cbmJvZHl7XG5cbiAgICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmICFpbXBvcnRhbnQ7XG5cblxuXG5cbn1cbiJdfQ== */
